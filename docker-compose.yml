version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: .deploy/Dockerfile.production
        environment:
            - APP_ENV=production
        volumes:
            - .:/var/www/html
        networks:
            - app_network

    nginx:
        image: nginx:latest
        volumes:
            - .:/var/www/html
            - ./.deploy/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "80:80"
        networks:
            - app_network

    mysql:
        image: mysql:8.0
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app_network

    redis:
        image: redis:latest
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        networks:
            - app_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        environment:
            PMA_HOST: mysql
        ports:
            - "8080:80"
        networks:
            - app_network

    schedule:
        build:
            context: .
            dockerfile: .deploy/Dockerfile.production
        environment:
            - APP_ENV=queue
        volumes:
            - .:/var/www/html
        command: php artisan schedule:run
        depends_on:
            - app
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    mysql_data:
